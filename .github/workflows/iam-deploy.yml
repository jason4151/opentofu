name: Deploy IAM to AWS

on:
  push:
    branches:
      - main
    paths:
      - 'iam/**' # Trigger on changes in the iam directory
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: us-east-2
  TOFU_VERSION: 1.8.5

jobs:
  deploy:
    name: Deploy IAM
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iam # Set working directory to iam/

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.TOFU_VERSION }}

      - name: Cache OpenTofu Providers
        uses: actions/cache@v3
        with:
          path: ~/.terraform.d/plugin-cache
          key: ${{ runner.os }}-tofu-${{ env.TOFU_VERSION }}-providers-${{ hashFiles('iam/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-tofu-${{ env.TOFU_VERSION }}-providers-

      - name: OpenTofu Init
        run: |
          export TF_PLUGIN_CACHE_DIR=~/.terraform.d/plugin-cache
          tofu init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
                    -backend-config="key=iam/terraform.tfstate" \
                    -backend-config="region=${{ env.AWS_REGION }}" \
                    -backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}"

      - name: OpenTofu Validate
        run: tofu validate

      - name: OpenTofu Plan
        id: plan
        if: github.event.inputs.action != 'destroy' || github.event_name == 'push'
        run: |
          tofu plan -out=tfplan -no-color
          echo "Plan generated at tfplan"

      - name: OpenTofu Apply
        if: |
          (github.event_name == 'push' || 
           (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply')) &&
          steps.plan.outcome == 'success'
        run: tofu apply -no-color -auto-approve tfplan

      - name: OpenTofu Destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        run: tofu destroy -no-color -auto-approve

      - name: Cleanup
        if: always() && (github.event.inputs.action != 'destroy' || github.event_name == 'push')
        run: rm -f tfplan